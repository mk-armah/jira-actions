name: Sync ArgoCD Application
on:
  workflow_dispatch:
    inputs:
      application_name:
        description: The ArgoCD Application Name.
        required: true
      server:
        description: The ArgoCD Application Link.
        required: true
        type: string
      port_payload:
        required: true
        description: >-
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)

jobs:
  change-incident-owner:
    runs-on: ubuntu-latest
    steps:
      
      - name: Log Executing Request to Sync Application
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "About to make a request to pagerduty..."

      - name: Sync ArgoCD Application
        uses: omegion/argocd-actions@v1
        with:
          address: ${{ github.event.inputs.server }}
          token: ${{ secrets.ARGOCD_TOKEN }}
          action: sync
          appName: ${{ github.event.inputs.application_name }}

      - name: Log If Request Fails 
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Request to sync argocd application failed ..."
          
      - name: Log Before Requesting for Synced Application
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Fetching data of synced application ..."

      - name: Request for Synced Application
        id: synced_application
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://${{github.event.inputs.server}}/api/v1/applications/${{github.event.inputs.application_name}}'
          method: 'GET'
          customHeaders: '{"Content-Type": "application/json", "Authorization: Bearer ${{secrets.ARGOCD_TOKEN}}"'
              
      - name: Log Before Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Reporting the synced application back to port ..."
    
      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: "${{ fromJson(steps.synced_application.outputs.response).metadata.uid }}"
          title: "${{ fromJson(steps.synced_application.outputs.response).metadata.name }}"
          blueprint: ${{ fromJson(inputs.port_payload).context.blueprint }}
          properties: |-
            {
              "namespace": "${{ fromJson(steps.synced_application.outputs.response).metadata.namespace }}",
              "gitRepo": "${{ fromJson(steps.synced_application.outputs.response).spec.source.repoURL }}",
              "gitPath": "${{ fromJson(steps.synced_application.outputs.response).spec.source.path }}",
              "destinationServer": "${{ fromJson(steps.synced_application.outputs.response).spec.destination.server }}",
              "syncStatus": "${{ fromJson(steps.synced_application.outputs.response).status.sync.status }}",
              "healthStatus": "${{ fromJson(steps.synced_application.outputs.response).status.health.status }}",
              "createdAt": "${{ fromJson(steps.synced_application.outputs.response).metadata.creationTimestamp}}",
              
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          runId: ${{ fromJson(inputs.port_payload).context.runId }}

      - name: Log If Upsetting Entity Fails 
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Failed to upsert synced argocd application to port ..."
          
      - name: Log After Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Entity upserting was successful âœ…"
