name: Trigger an Incident In PagerDuty
on:
  workflow_dispatch:
    inputs:
      payload:
        type: string
      event_action:
        type: string
      routing_key:
        type: string
      summary:
        type: string
      source:
        type: string
      severity:
        type: string
      port_context:
        required: true
        description: includes blueprint, run ID, and entity identifier from Port.
jobs:
  trigger-incident:
    runs-on: ubuntu-latest
    steps:
      - name: Inform starting of PagerDuty trigger 
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_context).run_id}}
          logMessage: |
              About to trigger PagerDuty incident.. ⛴️
              
      - name: Send Event to PagerDuty
        id: trigger
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://events.pagerduty.com/v2/enqueue'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json"}'
          data: >-
            {
              "payload": {
                "summary": "${{ github.event.inputs.summary }}",
                "source": "${{ github.event.inputs.source }}",
                "severity": "${{ github.event.inputs.severity }}"
              },
              "event_action": "${{ github.event.inputs.event_action }}",
              "routing_key": "${{ github.event.inputs.routing_key }}"
            }
      - name: Get PagerDuty Incident Details
        id: get_incident
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.pagerduty.com/incidents/${{fromJson(inputs.port_context).entity}}'
          method: 'GET'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/vnd.pagerduty+json;version=2", "Authorization": "Token token=${{ secrets.PAGERDUTY_API_KEY }}"}'
    
      - name: Inform Entity upsert failure
        if: steps.upsert_entity.outcome == 'failure'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_context).run_id}}
          logMessage: "Failed to report the triggered incident back to Port ..."

      - name: Log After Upserting Entity
        id: log-response
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(inputs.port_context).run_id}}
          logMessage: |
             PagerDuty incident triggered! ✅
