
name: Open Slack Channel
on:
  workflow_dispatch:
    inputs:
      channel_name:
        description: Name of the public or private channel to create.
        required: true
        type: string
      is_private:
        description: Create a private channel instead of a public one
        required: false
        type: boolean
      team_id:
        description: encoded team id to create the channel in, required if org token is used
        type: string
        required: false
      members:
        description: Add members manually to the channel.
        type: array
        required: false
      port_payload:
        required: true
        description: >-
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)

jobs:
  open-slack-channel:
    runs-on: ubuntu-latest
    steps:
      - name: Log Executing Request to Open Channel 
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "About to create a conversation channel in slack..."

      # - name: Create Slack Channel
      #   id: create_channel
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: 'https://slack.com/api/conversations.create'
      #     method: 'POST'
      #     customHeaders: '{ "Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.BOT_USER_OAUTH_TOKEN }}" }'
      #     data: >-
      #         '{
      #           "name": ${{inputs.channel_name}},
      #           "is_private": ${{inputs.is_private}}
      #         }'

      - name: Create Slack Channel
        id: create_channel
        env:
          SLACK_TOKEN: ${{ secrets.BOT_USER_OAUTH_TOKEN }}
        run: |
          response=$(curl -s -X POST "https://slack.com/api/conversations.create" \
            -H "Authorization: Bearer $SLACK_TOKEN" \
            -H "Content-Type: application/json" \
            --data "{\"name\": \"${{ github.event.inputs.channel }}\",\"is_private\": ${{ github.event.inputs.is_private }} }")
  
          # Extract the channel ID
          channel_id=$(echo $response | jq -r '.channel.id')
          echo "Channel ID: $channel_id"
          
          if [ "$channel_id" != "null" ]; then
            # Use GITHUB_ENV to set the channel_id environment variable for subsequent steps
            echo "CHANNEL_ID=$channel_id" >> $GITHUB_ENV
          else
            echo "Failed to create Slack channel"
            echo "Response: $response"
            exit 1
          fi

              
      - name: Log If Request Fails 
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Request to create slack channel failed ..."
          
      - name: Add Members to Slack Channel
        id: add_members
        if: success()
        env:
          SLACK_TOKEN: ${{ secrets.BOT_USER_OAUTH_TOKEN }}
          CHANNEL_ID: ${{ fromJson(steps.create_channel.outputs.response).channel.id }}
        run: |
          MEMBER_EMAILS= ${{ toJSON(github.event.inputs.members) }}
          for email in $(echo $MEMBER_EMAILS | jq -r '.[]'); do
            user_id=$(curl -s -X POST "https://slack.com/api/users.lookupByEmail" \
              -H "Content-Type: application/x-www-form-urlencoded" \
              -H "Authorization: Bearer $SLACK_TOKEN" \
              --data-urlencode "email=$email" | jq -r '.user.id')
            if [ "$user_id" != "null" ]; then
              curl -s -X POST "https://slack.com/api/conversations.invite" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $SLACK_TOKEN" \
                --data "{\"channel\":\"$CHANNEL_ID\",\"users\":\"$user_id\"}"
            else
              echo "User ID not found for email $email"
            fi
          done

      - name: Log If Request to Add Members Fails 
        if: failure()
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Failed to add members to slack channel ..."
