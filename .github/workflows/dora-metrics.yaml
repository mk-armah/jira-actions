name: Ingest DORA Metrics

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Comma-separated list of repositories to analyze (eg. port-labs/self-service-actions)'
        required: true
      timeframe:
        description: 'Last X weeks'
        required: true
      port_payload:
        required: true
        description: Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string
      
jobs:
  compute-dora-metrics:
    runs-on: ubuntu-latest
    
    steps:
      # - name: Deployment Frequency
      #   id: deploymement_frequency
      #   uses: DeveloperMetrics/deployment-frequency@v1.5.5
      #   with:
      #     workflows: 'CI/CD'
      #     owner-repo: ${{ github.event.inputs.repository }}
      #     pat-token: ${{ secrets.PATTOKEN }}

      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Run DORA deployment frequency 
        id: deploymement_frequency
        shell: pwsh
        run: |
           $scriptPath = Join-Path ${{ github.workspace }} "deploymentfrequency.ps1"
           chmod +x $scriptPath
           $result = & pwsh -File $scriptPath -ownerRepo "${{ inputs.repository }}" -workflows "CI/CD" -branch "main" -numberOfDays '30' -patToken "${{ secrets.PATTOKEN }}" -actionsToken "" -appId "" -appInstallationId "" -appPrivateKey ""
           Write-Host "Using script at: $scriptPath"
           Write-Host "::set-output name=result::$result"
           Write-Output $result >> $env:GITHUB_STEP_SUMMARY
         
      - name: Results for Deployment Frequency
        run: |
          echo '${{ steps.deploymement_frequency.outputs.result }}'
          
      # - name: Lead Time For Changes
      #   id: lead_time_for_changes
      #   uses: DeveloperMetrics/lead-time-for-changes@main
      #   with:
      #     workflows: 'CI/CD'
      #     owner-repo: ${{ github.event.inputs.repository }}
      #     pat-token: ${{ secrets.PATTOKEN }}

      - name: Run DORA lead time for changes
        id: lead_time_for_changes  # Ensure this step has an ID
        shell: pwsh
        run: |
          $scriptPath = Join-Path ${{ github.workspace }} "leadtimeforchanges.ps1"
          chmod +x $scriptPath
          $result = & pwsh -File $scriptPath -ownerRepo "${{ github.event.inputs.repository }}" -workflows "CI/CD" -branch "main" -numberOfDays '30' -commitCountingMethod 'last' -patToken "${{ secrets.PATTOKEN }}" -actionsToken "" -appId "" -appInstallationId "" -appPrivateKey ""             
          echo "::set-output name=jsonResult::$result"
    
      - name: Use Lead Time for Changes Results
        run: |
          $results = '${{ steps.lead_time_for_changes.outputs.jsonResult }}' | ConvertFrom-Json
          Write-Host "PR Average Time Duration: $($results.PRAverageTimeDuration)"
          Write-Host "Workflow Average Time Duration: $($results.WorkflowAverageTimeDuration)"
          Write-Host "Lead Time for Changes in Hours: $($results.LeadTimeForChangesInHours)"
          Write-Host "Rating: $($results.Rating)"
        shell: pwsh
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install httpx
          pip install PyGithub datetime

      - name: Calculate PR Metrics
        id: metrics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the automatically provided GITHUB_TOKEN
          REPOSITORY: ${{ github.event.inputs.repository }}
          TIME_FRAME: ${{ github.event.inputs.timeframe }}
        run: python calculate_pr_metrics.py

      - name: Log Before Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Upserting dora metrics to Port"
          
      - name: Calculated Metrics
        run: echo "${{ env.metrics }}"

      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: "${{ fromJson(env.metrics).id }}"
          title: ${{ github.event.inputs.repository }}
          blueprint: doraMetrics
          properties: |-
            {
              "averageOpenToCloseTime": "${{ fromJson(env.metrics).average_open_to_close_time }}",
              "averageTimeToFirstReview": "${{ fromJson(env.metrics).average_time_to_first_review }}",
              "averageTimeToApproval": "${{ fromJson(env.metrics).average_time_to_approval }}",
              "prsOpened": "${{ fromJson(env.metrics).prs_opened }}",
              "weeklyPrsMerged": "${{ fromJson(env.metrics).weekly_prs_merged }}",
              "averageReviewsPerPr": "${{ fromJson(env.metrics).average_reviews_per_pr }}",
              "averageCommitsPerPr": "${{ fromJson(env.metrics).average_commits_per_pr }}",
              "averageLocChangedPerPr": "${{ fromJson(env.metrics).average_loc_changed_per_pr }}",
              "averagePrsReviewedPerWeek": "${{ fromJson(env.metrics).average_prs_reviewed_per_week }}"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          runId: ${{ fromJson(inputs.port_payload).context.runId }}

      - name: Log After Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Entity upserting was successful âœ…"
