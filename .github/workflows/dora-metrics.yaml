name: Ingest DORA Metrics

on:
  schedule:
    - cron: '0 2 * * 1'  # At 02:00 on Monday
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install jq

      - name: Read Config and Output Matrix
        id: set-matrix
        run: |
          CONFIG_JSON=$(jq -c . src/dora-config.json)
          MATRIX_JSON=$(echo $CONFIG_JSON | jq -c '{include: .}')
          echo "matrix=${MATRIX_JSON}" >> $GITHUB_OUTPUT

  compute-dora-metrics:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ matrix.include.repository }}

      - name: Calculate Timeframe in Days
        run: echo "TIMEFRAME_IN_DAYS=$(( ${MATRIX_TIMEFRAME:-0} * 7 ))" >> $GITHUB_ENV
        env:
          MATRIX_TIMEFRAME: ${{ matrix.include.timeframe }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Compute PR Metrics
        env:
          GITHUB_TOKEN: ${{ secrets.PATTOKEN }}
          REPOSITORY: ${{ matrix.include.repository }}
        run: python src/calculate_pr_metrics.py

      - name: Deployment Frequency
        env:
          WORKFLOWS: ${{ matrix.include.workflows }}
          GITHUB_TOKEN: ${{ secrets.PATTOKEN }}
          REPOSITORY: ${{ matrix.include.repository }}
        run: python src/deploymentfrequency.py

      - name: Lead Time For Changes
        env:
          WORKFLOWS: ${{ matrix.include.workflows }}
          GITHUB_TOKEN: ${{ secrets.PATTOKEN }}
          REPOSITORY: ${{ matrix.include.repository }}
        run: python src/leadtimeforchanges.py

      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: "12345"
          blueprint: doraMetrics
          properties: |-
            {
              "timeFrameInWeeks": ${{ matrix.include.timeframe }},
              "totalDeployments": "${{ steps.deployment_frequency.outputs.total_deployments }}",
              "deploymentRating": "${{ steps.deployment_frequency.outputs.rating }}",
              "numberOfUniqueDeploymentDays": "${{ steps.deployment_frequency.outputs.number_of_unique_deployment_days }}",
              "deploymentFrequency": "${{ steps.deployment_frequency.outputs.deployment_frequency }}",
              "leadTimeForChangesInHours": "${{ steps.lead_time_for_changes.outputs.lead_time_for_changes_in_hours }}",
              "leadTimeRating": "${{ steps.lead_time_for_changes.outputs.rating }}",
              "workflowAverageTimeDuration": "${{ steps.lead_time_for_changes.outputs.workflow_average_time_duration }}",
              "prAverageTimeDuration": "${{ steps.lead_time_for_changes.outputs.pr_average_time_duration }}",
              "averageOpenToCloseTime": "${{ steps.compute_pr_metrics.outputs.average_open_to_close_time }}",
              "averageTimeToFirstReview": "${{ steps.compute_pr_metrics.outputs.average_time_to_first_review }}",
              "averageTimeToApproval": "${{ steps.compute_pr_metrics.outputs.average_time_to_approval }}",
              "prsOpened": "${{ steps.compute_pr_metrics.outputs.prs_opened }}",
              "weeklyPrsMerged": "${{ steps.compute_pr_metrics.outputs.weekly_prs_merged }}",
              "averageReviewsPerPr": "${{ steps.compute_pr_metrics.outputs.average_reviews_per_pr }}",
              "averageCommitsPerPr": "${{ steps.compute_pr_metrics.outputs.average_commits_per_pr }}",
              "averageLocChangedPerPr": "${{ steps.compute_pr_metrics.outputs.average_loc_changed_per_pr }}",
              "averagePrsReviewedPerWeek": "${{ steps.compute_pr_metrics.outputs.average_prs_reviewed_per_week }}"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
