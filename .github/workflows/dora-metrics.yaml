name: Ingest DORA Metrics

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Comma-separated list of repositories to analyze (eg. port-labs/self-service-actions)'
        required: true
      timeframe:
        description: 'Last X weeks'
        required: true
      port_payload:
        required: true
        description: Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string
      
jobs:
  compute-dora-metrics:
    runs-on: ubuntu-latest
    
    steps:
      - name: Deployment Frequency
        id: deploymement_frequency
        uses: DeveloperMetrics/deployment-frequency@v1.5.5
        with:
          workflows: 'CI/CD'
          owner-repo: ${{ github.event.inputs.repository }}
          pat-token: ${{ secrets.PATTOKEN }}
      
      - name: Results for Deployment Frequency
        run: |
          echo '${{ steps.deploymement_frequency.outputs.result }}'
          echo '${{ env.result }}'
          
      - name: Lead Time For Changes
        id: lead_time_for_changes
        uses: DeveloperMetrics/lead-time-for-changes@main
        with:
          workflows: 'CI/CD'
          owner-repo: ${{ github.event.inputs.repository }}
          pat-token: ${{ secrets.PATTOKEN }}
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install httpx
          pip install PyGithub datetime

      - name: Calculate PR Metrics
        id: metrics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the automatically provided GITHUB_TOKEN
          REPOSITORY: ${{ github.event.inputs.repository }}
          TIME_FRAME: ${{ github.event.inputs.timeframe }}
        run: python calculate_pr_metrics.py

      - name: Log Before Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Upserting dora metrics to Port"
          
      - name: Calculated Metrics
        run: echo "${{ env.metrics }}"

      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: "${{ env.metrics.id }}"
          title: ${{ github.event.inputs.repository }}
          blueprint: ${{ fromJson(inputs.port_payload).context.blueprint }}
          properties: |-
            {
              "averageOpenToCloseTime": "${{ fromJson(env.metrics).average_open_to_close_time }}",
              "averageTimeToFirstReview": "${{ env.metrics.average_time_to_first_review }}",
              "averageTimeToApproval": "${{ env.metrics.average_time_to_approval }}",
              "psOpened": "${{ env.metrics.prs_opened }}",
              "weeklyPrsMerged": "${{ env.metrics.weekly_prs_merged }}",
              "averageReviewsPerPr": "${{ env.metrics.average_reviews_per_pr }}",
              "averageCommitsPerPr": "${{ env.metrics.average_commits_per_pr }}",
              "averageLocChangedPerPr": "${{ env.metrics.average_loc_changed_per_pr }}",
              "averagePrsReviewedPerWeek": "${{ env.metrics.average_prs_reviewed_per_week }}"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          runId: ${{ fromJson(inputs.port_payload).context.runId }}

      - name: Log After Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Entity upserting was successful âœ…"
