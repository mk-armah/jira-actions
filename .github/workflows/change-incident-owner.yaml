name: Change PagerDuty Incident Owner

on:
  workflow_dispatch:
    inputs:
      incident_id:
        description: ID of the PagerDuty Incident
        required: true
        type: string
      new_owner_user_id:
        description: PagerDuty User ID of the new owner
        required: true
        type: string
      from:
        description: The email address of a valid user associated with the account making the request.
        required: true
        type: string
      port_payload:
        required: true
        description: >-
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)

jobs:
  change-incident-owner:
    runs-on: ubuntu-latest
    steps:
      
      - name: Log Executing Request to Change Owner
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "About to make a request to pagerduty..."

      - name: Change Incident Owner in PagerDuty
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.pagerduty.com/incidents/${{ github.event.inputs.incident_id }}'
          method: 'PUT'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/vnd.pagerduty+json;version=2", "Authorization": "Token token=${{ secrets.PAGERDUTY_API_KEY }}", "From": "${{ github.event.inputs.from }}"}'
          data: >-
            {
              "incident": {
                "type": "incident_reference",
                "assignments": [
                  {
                    "assignee": {
                      "id": "${{ github.event.inputs.new_owner_user_id }}",
                      "type": "user_reference"
                    }
                  }
                ]
              }
            }

      - name: Log Executing Request to Change Owner
        id: change_owner
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Getting incident object from response recieved ..."

      - name: Get Incident Object from Response
        id: incident
        run: |
          echo "incident=${{ toJson(steps.change_owner.outputs.response.incident) }}" >> $GITHUB_ENV

      - name: Log Before Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Reporting the updated incident back to port ..."

      - name: UPSERT Entity
        uses: port-labs/port-github-action@v1
        with:
          identifier: "${{ fromJson(steps.toggle_feature_flag.outputs.response).key }}"
          title: "${{ fromJson(steps.toggle_feature_flag.outputs.response).description }}"
          blueprint: "launchDarklyFeatureFlag"
          properties: |-
            {
              "status": "${steps.incident.outputs.status}",
              "url": "${steps.incident.outputs.self}",
              "urgency": "${steps.incident.outputs.urgency}",
              "responder": "${{ fromJson(steps.incident.outputs.assignments)[0].assignee.summary}}",
              "escalation_policy": "${{ fromJson(steps.incident.outputs.escalation_policy).summary }}",
              "created_at": "${steps.incident.outputs.created_at}",
              "updated_at": "${steps.incident.outputs.updated_at}"
            }
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          runId: ${{ fromJson(inputs.port_payload).context.runId }}

      - name: Log After Upserting Entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: "Entity upserting was successful âœ…"
