name: Ingest DORA Metrics

on:
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      owner: ${{ steps.set-matrix.outputs.owner }}
      doraTimeFrame: ${{steps.set-matrix.outputs.doraTimeFrame}}
      doraBlueprint: ${{steps.set-matrix.outputs.doraBlueprintID}}
      teamBlueprint: ${{steps.set-matrix.outputs.teamBlueprintID}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq

      - name: Read Config and Output Matrix
        id: set-matrix
        run: |
          CONFIG_JSON=$(cat src/dora-config-v2.json)
          MATRIX_JSON=$(echo $CONFIG_JSON | jq -c '{include: .items}')
          OWNER=$(echo $CONFIG_JSON | jq -r '.owner')
          "DORATIMEFRAME"=$(echo $CONFIG_JSON | jq -r '.doraTimeFrame')
          "DORABLUEPRINT"=$(echo $CONFIG_JSON | jq -r '.port.blueprint.dora')
          "TEAMBLUEPRINT"=$(echo $CONFIG_JSON | jq -r '.port.blueprint.team')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          # echo "doraTimeFrame=$DORATIMEFRAME" >> $GITHUB_OUTPUT
          echo "doraTimeFrame=$(( $DORATIMEFRAME * 7 ))" >> $$GITHUB_OUTPUT
          echo "doraBlueprint=$DORABLUEPRINT" >> $GITHUB_OUTPUT
          echo "teamBlueprint=$TEAMBLUEPRINT" >> $GITHUB_OUTPUT

  compute-team-metrics:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          
      - name: Compute Team Metrics
        run: |
          python src/calculate_team_metrics.py --owner "${{ needs.setup.outputs.owner }}" --time-frame "${{ needs.setup.outputs.doraTimeFrame }}" --token "${{ secrets.GH_TEAM_ACCESS_TOKEN }}" --port-client-id "${{ secrets.PORT_CLIENT_ID }}" --port-client-secret "${{ secrets.PORT_CLIENT_SECRET }}"

  compute-repo-metrics:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.include.repository }}

      - name: Transform Workflow Parameters
        run: |
          cleaned_name=$(echo "${{ matrix.repository }}" | tr -c '[:alnum:]' ' ')
          TITLE=$(echo "${cleaned_name}" | awk '{for(i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2));}1')
          echo "ENTITY_TITLE=$TITLE" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Compute PR Metrics
        run: |
          python src/calculate_pr_metrics.py  --owner "${{ needs.setup.outputs.owner }}" --repo "${{ matrix.repository }}" --token "${{ secrets.GH_TEAM_ACCESS_TOKEN }}" --timeframe "${{ needs.setup.outputs.doraTimeFrame }}" --platform github-actions
          
      # - name: Deployment Frequency
      #   id: deployment_frequency
      #   run: python src/deployment_frequency.py --owner "${{ needs.setup.outputs.owner }}" --repo "${{ matrix.repository }}" --token "${{ secrets.PATTOKEN }}" --workflows '${{ toJson(matrix.workflows) }}' --timeframe "${{ env.TIMEFRAME_IN_DAYS }}" --branch "${{ matrix.branch }}" --platform github-actions
      
      # - name: Lead Time For Changes
      #   id: lead_time_for_changes
      #   run: python src/lead_time_for_changes.py --owner "${{ needs.setup.outputs.owner }}" --repo "${{ matrix.repository }}" --token "${{ secrets.PATTOKEN }}" --workflows '${{ toJson(matrix.workflows) }}' --timeframe ${{ env.TIMEFRAME_IN_DAYS }} --branch ${{ matrix.branch }} --platform github-actions

      # - name: UPSERT Repository DORA Metrics
      #   uses: port-labs/port-github-action@v1
      #   with:
      #     identifier: ${{ fromJson(env.metrics).id }}
      #     title: ${{ env.ENTITY_TITLE }}
      #     blueprint: doraMetrics
      #     properties: |-
      #       {
      #         "timeFrameInWeeks": ${{ matrix.timeframe }},
      #         "totalDeployments": "${{ fromJson(env.deployment_frequency_report).total_deployments }}",
      #         "deploymentRating": "${{ fromJson(env.deployment_frequency_report).rating }}",
      #         "numberOfUniqueDeploymentDays": "${{ fromJson(env.deployment_frequency_report).number_of_unique_deployment_days }}",
      #         "numberOfUniqueDeploymentWeeks": "${{ fromJson(env.deployment_frequency_report).number_of_unique_deployment_weeks }}",
      #         "numberOfUniqueDeploymentMonths": "${{ fromJson(env.deployment_frequency_report).number_of_unique_deployment_months }}",
      #         "deploymentFrequency": "${{ fromJson(env.deployment_frequency_report).deployment_frequency }}",
      #         "leadTimeForChangesInHours": "${{ fromJson(env.lead_time_for_changes_report).lead_time_for_changes_in_hours }}",
      #         "leadTimeRating": "${{ fromJson(env.lead_time_for_changes_report).rating }}",
      #         "workflowAverageTimeDuration": "${{ fromJson(env.lead_time_for_changes_report).workflow_average_time_duration }}",
      #         "prAverageTimeDuration": "${{ fromJson(env.lead_time_for_changes_report).pr_average_time_duration }}",
      #         "averageOpenToCloseTime": "${{ fromJson(env.metrics).average_open_to_close_time }}",
      #         "averageTimeToFirstReview": "${{ fromJson(env.metrics).average_time_to_first_review }}",
      #         "averageTimeToApproval": "${{ fromJson(env.metrics).average_time_to_approval }}"
      #       }
          #     clientId: ${{ secrets.PORT_CLIENT_ID }}
          #     clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          #     baseUrl: https://api.getport.io
          #     operation: UPSERT
